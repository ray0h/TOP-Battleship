{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/factories/gameboard.js","webpack:///./src/factories/player.js","webpack:///./src/factories/ships.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAA2B;;AAE3B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,oBAAoB,sDAAI;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;ACjDxB;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;ACnCrB;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACvBpB;AAAA;AAAA;AAAA;AAA8C;AACR;AACE","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Ship from \"./ships\";\n\nconst Gameboard = () => {\n\n  let shipArray = [];\n  let boardArray = Array(100);\n\n  function placeShip(coord) {\n    let isAlreadyOccupied = false;\n    \n    coord.forEach(coord => {\n      if (boardArray[coord]) {\n        isAlreadyOccupied = true;\n      };\n    });\n\n    if (!isAlreadyOccupied) {\n      let id = shipArray.length + 1;\n      let newShip = Ship(id, coord);\n      shipArray.push(newShip);\n      coord.forEach(coord => boardArray[coord] = id);\n    };\n  };\n\n  function receiveAttack(coord) {\n    if(boardArray[coord] === \"miss\" || boardArray[coord] === \"hit\") {\n      return;\n    } else if(boardArray[coord] === undefined) {\n      boardArray[coord] = \"miss\";\n    } else {\n      let hitShip = shipArray[boardArray[coord]-1];\n      hitShip.hit(coord);\n      boardArray[coord] = \"hit\";\n    }\n  };\n\n  function allShipsSunk() {\n    return shipArray.map(ship => ship.isSunk()).every(isSunk => isSunk === true);\n  };\n\n  return {\n    boardArray,\n    shipArray,\n    placeShip,\n    receiveAttack,\n    allShipsSunk\n  };\n};\n\nexport default Gameboard;","const Player = () => {\n  let isTurn = true;\n\n  function setTurn(bool) {\n    isTurn = bool;\n  };\n\n  function getTurn() {\n    return isTurn;\n  };\n\n  function attack(enemyBoard, coord) {\n    if (isTurn) {\n      enemyBoard.receiveAttack(coord);\n    };\n  };\n\n  function randomAttack(enemyBoard) {\n    if (isTurn) {\n      let coord = Math.floor(Math.random()*100);\n      while (enemyBoard.boardArray[coord] === \"miss\" || enemyBoard.boardArray[coord] === \"hit\") {\n        coord = Math.floor(Math.random()*100);\n      }\n      enemyBoard.receiveAttack(coord);\n    }\n  }\n\n  return {\n    getTurn,\n    setTurn,\n    attack,\n    randomAttack,\n  }\n};\n\nexport default Player;","const Ship = (id, position) => {\n  \n  let hits = [];\n\n  function hit(pos) {\n    if (position.includes(pos)) {\n      hits.push(pos);\n    };\n  };\n\n  function isSunk() {\n    return (hits.length === position.length) ? true : false;\n  };\n\n  return {\n    id,\n    length: position.length,\n    hits,\n    hit,\n    isSunk,\n  };\n};\n\nexport default Ship;\n","import Gameboard from \"./factories/gameboard\";\nimport Ships from \"./factories/ships\";\nimport Player from \"./factories/player\";\n\n"],"sourceRoot":""}